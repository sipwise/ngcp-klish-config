<?xml version="1.0" encoding="UTF-8"?>
<CLISH_MODULE xmlns="http://clish.sourceforge.net/XMLSchema" 
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xsi:schemaLocation="http://clish.sourceforge.net/XMLSchema
                     http://clish.sourceforge.net/XMLSchema/clish.xsd">
	<!--=======================================================-->

<VIEW name="utils-view">

<!-- UTILS PROCESSING -->



<!-- COMMAND CONTAINERS -->

<COMMAND name="notify"  help="Notify Services" interrupt="true" />
<COMMAND name="notify siptrace"  help="SIP Trace Element (PCAP)" interrupt="true"/>
<COMMAND name="notify siplog"  help="SIP Log Element (TXT)" interrupt="true"/>


<!-- TCPDUMP -->

<COMMAND name="notify siptrace on" lock="false" help="Start SIP Tracer in PCAP Mode" interrupt="true">
		<!-- command options -->
		<PARAM name="ptype"
                        help="Switch Port or Range"
                        ptype="STRING"
			optional="true"
			default="null"
                        mode="switch">
                        <PARAM name="port"
                                help="port number"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="psel"
                                        help="value"
                                        ptype="UINT"/>
			</PARAM>
                        <PARAM name="portrange"
                                help="port range"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="psel"
                                        help="value"
                                        ptype="STRING"/>
                        </PARAM>
                </PARAM>
                <ACTION>
				case "${ptype}" in
					"port")
						param="port ${psel}"
						;;
					"portrange")
						param="portrange ${psel}"
						;;
					*)
						param="portrange 5060-5090"
						;;
				esac

				user=$(whoami)
				pid=$(ps aux | grep "tcpdump" | grep -v "grep tcpdump" | awk '$2!=0{print $2}')
				if [ ! -z $pid ]; then
					echo "ERROR: SIP Trace to file is already runnnig for $user ($pid)"
				else
					echo "Starting SIP Tracer $$ for $user..."
					tcpdump -ni any -s0 $param -w /tmp/siptrace$$.pcap &amp;
					#tcpdump -ni any -s0 portrange 5060-5090 -w /tmp/siptrace$$.pcap &amp;
					echo "SIP Trace to PCAP is runnnig (saving to: /tmp/siptrace$$.pcap)"
				fi
                </ACTION>
</COMMAND>
<COMMAND name="notify siptrace off" lock="false" help="Stop SIP Tracer in PCAP Mode" interrupt="true">
                <ACTION>
				user=$(whoami)
				pid=$(ps aux | grep "tcpdump" | grep -v "grep tcpdump" | awk '$2!=0{print $2}')
				#echo $pid
				if [ ! -z $pid ]; then
					echo "Stopping SIP Tracer $pid..."
					kill $pid
					echo "Done."
				else
					echo "ERROR: SIP Trace is not runnnig."
				fi
                </ACTION>
</COMMAND>
<COMMAND name="notify siptrace kill all" lock="false" help="Kill ALL SIP Logrs" interrupt="true">
                <ACTION>
                                killall tcpdump
                </ACTION>
</COMMAND>
<COMMAND name="notify siptrace kill" lock="false" help="Kill SIP Tracer by PID" interrupt="true">
                 <PARAM name="npid"
                        optional="true"
                        help="Specify the PID to kill"
                        ptype="STRING"/>
                <ACTION>
                        if test -n "${npid}"; then
                                kill "${npid}"
                        else
				pid=$(ps aux | grep "tcpdump" | grep -v "grep tcpdump" | awk '$2!=0{print $2}')
                                #echo $pid
                                if [ ! -z $pid ]; then
                                        echo "Choose a PID to terminate:"
                                        echo $pid; echo
                                else
                                        echo "No Tracers runnning."
                                fi
                        fi
                </ACTION>
</COMMAND>
<COMMAND name="notify siptrace list" lock="false" help="Kill ALL SIP Tracers" interrupt="true">
                <ACTION>
				 pid=$(ps aux | grep "tcpdump" | grep -v "grep tcpdump" | awk '$2!=0{print $2}')
                </ACTION>
</COMMAND>

<COMMAND name="notify siptrace on timed" lock="false" help="Start SIP Logr with timer" interrupt="false" >
                 <PARAM name="tlimit"
                        optional="true"
                        default="10"
                        help="Specify the length of tracer is seconds"
                        ptype="STRING"/>
		<!-- command options -->
                <PARAM name="ptype"
                        help="Switch Port or Range"
                        ptype="STRING"
			optional="true"
			default="null"
                        mode="switch">
                        <PARAM name="port"
                                help="port number"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="psel"
                                        help="value"
                                        ptype="UINT"/>
                        </PARAM>
                        <PARAM name="portrange"
                                help="port range"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="psel"
                                        help="value"
                                        ptype="STRING"/>
                        </PARAM>
                </PARAM>

                <ACTION>
				case "${ptype}" in
                                        "port")
                                                param="port ${psel}"
                                                ;;
                                        "portrange")
                                                param="portrange ${psel}"
                                                ;;
                                        *)
                                                param="portrange 5060-5090"
                                                ;;
                                esac

                        user=$(whoami)
                        if test -n "${tlimit}"; then
					timeout "${tlimit}" tcpdump -ni any -s0 $param -w /tmp/siptrace_timed_$$.pcap &amp;
					#timeout "${tlimit}" tcpdump -ni any -s0 portrange 5060-5090 -w /tmp/siptrace_timed_$$.pcap &amp;
                                        echo "SIP Tracer timed capturing started for "${tlimit}" seconds, saving to: /tmp/siptrace_timed_$$.pcap"
                        fi
                </ACTION>
</COMMAND>





<!-- NGREP -->

<COMMAND name="notify siplog screen" lock="false" help="Start SIP Tracer in Text Mode" interrupt="true">
		<!-- command options -->
                <PARAM name="ptype"
                        help="Switch Port or Range"
                        ptype="STRING"
			optional="true"
			default="null"
                        mode="switch">
                        <PARAM name="port"
                                help="port number"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="psel"
                                        help="value"
                                        ptype="UINT"/>
                        </PARAM>
                        <PARAM name="portrange"
                                help="port range"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="psel"
                                        help="value"
                                        ptype="STRING"/>
                        </PARAM>
                </PARAM>
		<PARAM name="filter"
                        help="SIP filter"
                        ptype="STRING"
                        optional="true"
                        default="null"
                        mode="switch">
                        <PARAM name="grep"
                                help="port number"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="pfil"
                                        help="value"
					default=""
                                        ptype="STRING"/>
                        </PARAM>
		</PARAM>

                <ACTION>
				case "${ptype}" in
                                        "port")
                                                param="port ${psel}"
                                                ;;
                                        "portrange")
                                                param="portrange ${psel}"
                                                ;;
                                        *)
                                                param="portrange 5060-5090"
                                                ;;
                                esac

					echo "Starting SIP Tracer... (CTRL-C to Stop)"
					ngrep-sip ${pfil} $param
					
                </ACTION>
</COMMAND>

<COMMAND name="notify siplog on" lock="false" help="Start SIP Tracer in Text Mode" interrupt="true">
		<!-- command options -->
                <PARAM name="ptype"
                        help="Switch Port or Range"
                        ptype="STRING"
			optional="true"
			default="null"
                        mode="switch">
                        <PARAM name="port"
                                help="port number"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="psel"
                                        help="value"
                                        ptype="UINT"/>
                        </PARAM>
                        <PARAM name="portrange"
                                help="port range"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="psel"
                                        help="value"
                                        ptype="STRING"/>
                        </PARAM>
                </PARAM>
		<PARAM name="filter"
                        help="SIP filter"
                        ptype="STRING"
                        optional="true"
                        default="null"
                        mode="switch">
                        <PARAM name="grep"
                                help="port number"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="pfil"
                                        help="filter string"
					default=""
                                        ptype="STRING"/>
                        </PARAM>
		</PARAM>

                <ACTION>
				case "${ptype}" in
                                        "port")
                                                param="port ${psel}"
                                                ;;
                                        "portrange")
                                                param="portrange ${psel}"
                                                ;;
                                        *)
                                                param="portrange 5060-5090"
                                                ;;
                                esac

				if test -n "${pfil}"; then
                                	param=" -T -i -t -q ${pfil} $param"
                        	fi

				#echo "STRING: $param"
				user=$(whoami)
				pid=$(ps aux | grep "ngrep" | grep "P $user" | grep -v "grep ngrep" | awk '$2!=0{print $2}')
				#echo $pid
				if [ ! -z $pid ]; then
					echo "ERROR: SIP Log to file is already runnnig for $user ($pid)"
				else
					echo "Starting SIP Logr $$ for $user..."
					ngrep -d any -W byline $param -P $user > /tmp/siplog$$.log &amp;
					#ngrep -W byline portrange 5060-5090 -P $user > /tmp/siplog$$.log &amp;
					echo "SIP Log to file is runnnig (saving to: /tmp/siplog$$.log)"
				fi
                </ACTION>
</COMMAND>
<COMMAND name="notify siplog off" lock="false" help="Stop SIP Logr in Text Mode" interrupt="true">
                <ACTION>
				user=$(whoami)
				pid=$(ps aux | grep "ngrep" | grep "P $user" | grep -v "grep ngrep" | awk '$2!=0{print $2}')
				#echo $pid
				if [ ! -z $pid ]; then
					echo "Stopping SIP Logr $pid..."
					kill $pid
					echo "Done."
				else
					echo "ERROR: SIP Log is not runnnig."
				fi
                </ACTION>
</COMMAND>
<COMMAND name="notify siplog kill all" lock="false" help="Kill ALL SIP Logrs" interrupt="true">
                <ACTION>
				killall ngrep
				rm -rf /tmp/siplog*.pid
                </ACTION>
</COMMAND>
<COMMAND name="notify siplog kill" lock="false" help="Kill SIP Logrs by PID" interrupt="true">
		 <PARAM name="npid"
                        optional="true"
                        help="Specify the PID to kill"
                        ptype="STRING"/>
                <ACTION>
			if test -n "${npid}"; then
				kill "${npid}"
			else 
			     pid=$(ps aux | grep "ngrep" | grep "P $user" | grep -v "grep ngrep" | awk '$2!=0{print $2}')
                                #echo $pid
                                if [ ! -z $pid ]; then
					echo "Choose a PID to terminate:"
					echo $pid; echo
				else
					echo "No Tracers runnning."
				fi
			fi
                </ACTION>
</COMMAND>
<COMMAND name="notify siplog list" lock="false" help="Kill ALL SIP Logrs" interrupt="true">
                <ACTION>
				 ps aux | grep "ngrep" | grep "P $user" | grep -v "grep ngrep" | awk '$2!=0{print $2}'
                </ACTION>
</COMMAND>

<COMMAND name="notify siplog on timed" lock="false" help="Start SIP Logr with timer" interrupt="false" >
                 <PARAM name="tlimit"
                        optional="true"
                        default="10"
                        help="Specify the length of tracer is seconds"
                        ptype="STRING"/>
		<!-- command options -->
                <PARAM name="ptype"
                        help="Switch Port or Range"
                        ptype="STRING"
			optional="true"
			default="null"
                        mode="switch">
                        <PARAM name="port"
                                help="port number"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="psel"
                                        help="value"
                                        ptype="UINT"/>
                        </PARAM>
                        <PARAM name="portrange"
                                help="port range"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="psel"
                                        help="value"
                                        ptype="STRING"/>
                        </PARAM>
                </PARAM>
		<PARAM name="filter"
                        help="SIP filter"
                        ptype="STRING"
                        optional="true"
                        default="null"
                        mode="switch">
                        <PARAM name="grep"
                                help="port number"
                                ptype="SUBCOMMAND"
                                mode="subcommand">
                                <PARAM name="pfil"
                                        help="filter string"
					default=""
                                        ptype="STRING"/>
                        </PARAM>
		</PARAM>

                <ACTION>
			case "${ptype}" in
                                        "port")
                                                param="port ${psel}"
                                                ;;
                                        "portrange")
                                                param="portrange ${psel}"
                                                ;;
                                        *)
                                                param="portrange 5060-5090"
                                                ;;
                        esac

				if test -n "${pfil}"; then
                                	param=" -T -i -t -q ${pfil} $param"
                        	fi

			user=$(whoami)
                        if test -n "${tlimit}"; then
					timeout "${tlimit}" ngrep -d any -W byline $param -P $user > /tmp/siplog_timed_$$.log &amp;
					#timeout "${tlimit}" ngrep -W byline portrange 5060-5090 -P $user > /tmp/siplog_timed_$$.log &amp;
					echo "SIP Logr timed capturing started for "${tlimit}" seconds, saving to: /tmp/siplog_timed_$$.txt"
                        fi
                </ACTION>
</COMMAND>




<!-- DEBUG LEVELS -->

 	<COMMAND name="notify debug" help="Notify Set Debug Levels (menu)" />

	<!-- DEBUG PROXY -->

        <COMMAND name="notify debug proxy" lock="false" help="Notify Proxy Debug level" interrupt="true"/>
        <COMMAND name="notify debug proxy get" lock="false" help="Get PROXY Debug level" interrupt="true">
        <ACTION>ngcp-kamctl proxy fifo debug</ACTION>
        </COMMAND>

        <COMMAND name="notify debug proxy set" lock="false" help="Set PROXY Debug level" interrupt="true">
		<PARAM name="debuglevel"
                        optional="false"
                        help="Debug level to set"
                        ptype="STRING"/>

                <ACTION>ngcp-kamctl proxy fifo debug "${debuglevel}" </ACTION>
        </COMMAND>

	<!-- DEBUG LB -->

        <COMMAND name="notify debug lb" lock="false" help="Notify LB Debug level" interrupt="true"/>
        <COMMAND name="notify debug lb get" lock="false" help="Get LB Debug level" interrupt="true">
        <ACTION>ngcp-kamctl lb fifo debug</ACTION>
        </COMMAND>

        <COMMAND name="notify debug lb set" lock="false" help="Set LB Debug level" interrupt="true">
		<PARAM name="debuglevel"
                        optional="false"
                        help="Debug level to set"
                        ptype="STRING"/>

                <ACTION>ngcp-kamctl lb fifo debug "${debuglevel}" </ACTION>
        </COMMAND>

        <COMMAND name="notify debug sems" lock="false" help="Notify SEMS Debug level" interrupt="true"/>
        <COMMAND name="notify debug sems get" lock="false" help="Get SEMS Debug level" interrupt="true">
        <ACTION>sems-stats -c "get_loglevel"</ACTION>
        </COMMAND>

	<!-- DEBUG SEMS -->

        <COMMAND name="notify debug sems set" lock="false" help="Set SEMS Debug level" interrupt="true">
		<PARAM name="debuglevel"
                        optional="false"
                        help="Debug level to set"
                        ptype="STRING"/>
                <ACTION>sems-stats -c "set_loglevel ${debuglevel}" </ACTION>
        </COMMAND>



<!-- END UTILS -->



</VIEW>

</CLISH_MODULE>
